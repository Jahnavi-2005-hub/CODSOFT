# -*- coding: utf-8 -*-
"""Titanic_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11USNBaSYTwuaT7CAko1_srf9amv4cO6M
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv("titanic.csv")

df.head(10)

df['Survived'].value_counts()

df.isna().sum()

df['Age'].mean()

df['Age'] = df['Age'].fillna(df['Age'].mean())
print("Number of null values in 'Age' column after filling:")
display(df['Age'].isna().sum())

df.dropna(subset=['Embarked'],inplace = True)

df.isna().sum()

df = pd.get_dummies(data=df,columns=['Sex'],drop_first=True)

df.head()

from sklearn.linear_model import LogisticRegression

model = LogisticRegression()

from sklearn.model_selection import train_test_split

df = pd.get_dummies(data=df,columns=['Embarked'],drop_first=True)
X = df[['Pclass','Sex_male','Age','SibSp','Parch','Fare','Embarked_Q','Embarked_S']]
Y = df['Survived']

X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.3,random_state=42)

X_train

model.fit(X_train,Y_train)

predictions = model.predict(X_test)

predictions

from sklearn.metrics import confusion_matrix, classification_report

print(classification_report(Y_test,predictions))

print(confusion_matrix(Y_test,predictions))

person = {'Pclass':1,'Sex_male':1,'Age':25,'SibSp':2,'Parch':0,'Fare':500,'Embarked_Q':0,'Embarked_S':1}
person_df = pd.DataFrame(person,index=[0])
person_df

person = {'Pclass':1,'Sex_male':1,'Age':25,'SibSp':2,'Parch':0,'Fare':500,'Embarked_Q':0,'Embarked_S':1}
person_df = pd.DataFrame(person,index=[0])
model.predict(person_df)

prediction_proba = model.predict_proba(person_df)[:, 1]
plt.figure(figsize=(4, 3))
plt.bar(['Not Survived', 'Survived'], [1 - prediction_proba[0], prediction_proba[0]], color=['red', 'green'])
plt.ylabel('Probability')
plt.title('Survival Probability Prediction')
plt.show()